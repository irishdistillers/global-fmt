x-bash-env-steps:
  - &bash_env_export export BASH_ENV="$BITBUCKET_CLONE_DIR/.bashrc"
  - &bash_env_source source $BASH_ENV

x-composer-configure-steps:
  - &composer_global composer global require naderman/composer-aws
  - &composer_auth |
                      export COMPOSER_AUTH="{\"bitbucket-oauth\": {\"bitbucket.org\": {\"consumer-key\": \"$CI_CONSUMER_KEY\", \"consumer-secret\": \"$CI_CONSUMER_SECRET\"}},\"github-oauth\": {\"github.com\": \"$GITHUB_TOKEN\"}}"

default_steps: &default_steps
  - step:
      name: Configure Environment Variables
      services:
          - docker
      caches:
          - docker
      script:
        - *bash_env_export
        - export CI_BRANCH=${BITBUCKET_BRANCH:-master} && echo $CI_BRANCH
        - export PR_NUMBER=$BITBUCKET_PR_ID && echo $PR_NUMBER
        - export CI_PR_URL=https://bitbucket.org/$BITBUCKET_REPO_OWNER/$BITBUCKET_REPO_SLUG/pull-requests/$BITBUCKET_PR_ID && echo $CI_PR_URL
        - export CI_BUILD_NUMBER=$BITBUCKET_BUILD_NUMBER && echo $CI_BUILD_NUMBER
        - export CI_PROJECT_USERNAME=$BITBUCKET_REPO_OWNER && echo $CI_PROJECT_USERNAME
        - export CI_PROJECT_REPONAME=$BITBUCKET_REPO_SLUG && echo $CI_PROJECT_REPONAME
        - export CI_PROJECT_NAME=$BITBUCKET_REPO_FULL_NAME && echo $CI_PROJECT_NAME
        - /build-tools-ci/scripts/set-environment
        - echo $TERMINUS_ENV
      artifacts:
        - .bashrc
  - step:
      name: Build Dev Assets
      services:
        - docker
      caches:
        - composer
        - docker
        - node
      script:
        - *bash_env_export
        - *bash_env_source
        - *composer_global
        - *composer_auth
        - ./.ci/build/dev-assets
      artifacts:
        - bin/**
        - node_modules/**
        - vendor/**
        - web/**
  - parallel:
    - step:
        name: Static Tests
        services:
          - docker
        caches:
          - docker
          - node
        script:
          - *bash_env_export
          - *bash_env_source
          - *composer_global
          - *composer_auth
          - ./.ci/test/static/run
    - step:
        name: Compile Static Assets
        services:
          - docker
        caches:
          - docker
          - node
        script:
          - *bash_env_export
          - *bash_env_source
          - ./.ci/build/compile-assets
        artifacts:
          - web/**
  - step:
        name: Build Prod Assets
        services:
          - docker
        caches:
          - composer
          - docker
        script:
          - *bash_env_export
          - *bash_env_source
          - *composer_global
          - *composer_auth
          - ./.ci/build/prod-assets
        artifacts:
          - web/**
  - step:
      name: Deploy to Pantheon
      services:
          - docker
      caches:
          - composer
          - docker
      script:
        - *bash_env_export
        - *bash_env_source
        - *composer_global
        - *composer_auth
        - ./.ci/deploy/pantheon/dev-multidev
      artifacts:
        - web/**
  - step:
      name: Test Visual Regression
      image: backstopjs/backstopjs:4.1.9
      services:
          - docker
      caches:
          - docker
          - node
      script:
        - *bash_env_export
        - *bash_env_source
        - ./.ci/test/visual-regression/run
      artifacts:
        - backstop_data/**

image: quay.io/pantheon-public/build-tools-ci:6.x

options:
  max-time: 30

pipelines:
  pull-requests:
    # Using the default_steps anchor means no other items can be added
    '**': *default_steps
  branches:
    # Using the default_steps anchor means no other items can be added
    master: *default_steps
  custom:
    clu:
    - step:
        name: Composer Lock Update
        services:
          - docker
        caches:
          - docker
          - composer
        script:
          - export CI_BRANCH=${BITBUCKET_BRANCH:-master} && echo $CI_BRANCH
          - export CI_BUILD_NUMBER=$BITBUCKET_BUILD_NUMBER && echo $CI_BUILD_NUMBER
          - export CI_PROJECT_USERNAME=$BITBUCKET_REPO_OWNER && echo $CI_PROJECT_USERNAME
          - export CI_PROJECT_REPONAME=$BITBUCKET_REPO_SLUG && echo $CI_PROJECT_REPONAME
          - export CI_PROJECT_NAME=$BITBUCKET_REPO_FULL_NAME && echo $CI_PROJECT_NAME
          - /build-tools-ci/scripts/set-environment
          - *composer_global
          - *composer_auth
          - terminus -n auth:login --machine-token="$TERMINUS_TOKEN"
          - set -e && terminus project:clu $TERMINUS_SITE
